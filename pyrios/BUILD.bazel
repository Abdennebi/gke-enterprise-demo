    # Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_STAGING_CLUSTER = "gke_pso-helmsman-cicd-infra_us-west1-b_staging-cloud-cluster"
_STAGING_CONTEXT = _STAGING_CLUSTER # this won't always be the case, be mindful
_STAGING_IMAGE_REPO = "gcr.io/pso-helmsman-cicd-infra"

# SET YOUR INDIVIDUAL (DEV ENV) VARIABLES

_DEV_CLUSTER =    "gke_pso-helmsman-cicd-infra_us-west1-b_dev-cloud-cluster"
_DEV_CONTEXT = _DEV_CLUSTER
_DEV_IMAGE_REPO = "gcr.io/pso-helmsman-cicd-infra/{BUILD_USER}"

package(default_visibility = ["//visibility:public"])

load("@io_bazel_rules_docker//go:image.bzl", "go_image")

go_image(
    name = "app_image",
    srcs = ["main.go"],
    importpath = "github.com/GoogleCloudPlatform/gke-enterprise-demo/pyrios",
    deps = [
        "@com_google_cloud_go//compute/metadata:go_default_library",
        "@io_opencensus_go//trace:go_default_library",
        "@io_opencensus_go_contrib_exporter_stackdriver//:go_default_library",
        ],
)

load("@k8s_deploy//:defaults.bzl", "k8s_deploy",)
load("@k8s_service//:defaults.bzl", "k8s_service",)
load("@io_bazel_rules_k8s//k8s:object.bzl", "k8s_object")

## Staging resources
k8s_deploy(
    name = "staging-deployment",
    cluster = _STAGING_CLUSTER,
    context = _STAGING_CONTEXT,
    image_chroot = _STAGING_IMAGE_REPO,
    images = {
        "pyrios:do_not_delete": ":app_image",
    },
    template = "//pyrios/manifest-templates:deployment.yaml",
)

k8s_service(
    name = "staging-service",
    cluster = _STAGING_CLUSTER,
    context = _STAGING_CONTEXT,
    image_chroot = _STAGING_IMAGE_REPO,
    template = "//pyrios/manifest-templates:service.yaml",
)

load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")

k8s_objects(
    name = "staging",
    objects = [
        ":staging-deployment",
        ":staging-service",
    ],
)

load("@k8s_deploy//:defaults.bzl", "k8s_deploy",)
load("@k8s_service//:defaults.bzl", "k8s_service",)

## Dev resources
k8s_deploy(
    name = "dev-deployment",
    cluster = _DEV_CLUSTER,
    context = _DEV_CONTEXT,
    image_chroot = _DEV_IMAGE_REPO,
    images = {
        "pyrios:do_not_delete": ":app_image",
    },
    template = "//pyrios/manifest-templates:deployment.yaml",
)

k8s_service(
    name = "dev-service",
    cluster = _DEV_CLUSTER,
    context = _DEV_CONTEXT,
    image_chroot = _DEV_IMAGE_REPO,
    template = "//pyrios/manifest-templates:service.yaml",
)

load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")

k8s_objects(
    name = "dev",
    objects = [
        ":dev-deployment",
        ":dev-service",
    ],
)
